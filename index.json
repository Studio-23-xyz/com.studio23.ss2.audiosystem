{
  "api/Global.Sample.html": {
    "href": "api/Global.Sample.html",
    "title": "Class Sample | |",
    "keywords": "Class Sample Namespace Global public class Sample : MonoBehaviour Inheritance object Sample Fields currentLocale public Language currentLocale Field Value Language isPaused public bool isPaused Field Value bool Methods ChangeParameter() public void ChangeParameter() LoadBank() public void LoadBank() MuteBus() public void MuteBus() Pause() public void Pause() PauseBus() public void PauseBus() Play() public void Play() PlayCN() public void PlayCN() PlayEN() public void PlayEN() PlayJP() public void PlayJP() PlaySound() public void PlaySound() Release() public void Release() SetBusVolume() public void SetBusVolume() SetVCAVolume() public void SetVCAVolume() Stop() public void Stop() StopAllBusEvents() public void StopAllBusEvents() StopSound() public void StopSound() SwitchToCN() public void SwitchToCN() Toggle() public void Toggle() UnMuteBus() public void UnMuteBus() UnPause() public void UnPause() UnPauseBus() public void UnPauseBus() UnloadAllBanks() public void UnloadAllBanks() UnloadBank() public void UnloadBank()"
  },
  "api/Global.html": {
    "href": "api/Global.html",
    "title": "Namespace | |",
    "keywords": "Namespace Classes Sample"
  },
  "api/Studio23.SS2.AudioSystem.fmod.Core.BanksManager.BankEvent.html": {
    "href": "api/Studio23.SS2.AudioSystem.fmod.Core.BanksManager.BankEvent.html",
    "title": "Delegate BanksManager.BankEvent | |",
    "keywords": "Delegate BanksManager.BankEvent Namespace Studio23.SS2.AudioSystem.fmod.Core public delegate UniTask BanksManager.BankEvent(string bankName) Parameters bankName string Returns UniTask"
  },
  "api/Studio23.SS2.AudioSystem.fmod.Core.BanksManager.html": {
    "href": "api/Studio23.SS2.AudioSystem.fmod.Core.BanksManager.html",
    "title": "Class BanksManager | |",
    "keywords": "Class BanksManager Namespace Studio23.SS2.AudioSystem.fmod.Core public class BanksManager Inheritance object BanksManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields OnBankLoaded public BanksManager.BankEvent OnBankLoaded Field Value BanksManager.BankEvent OnBankUnloaded public BanksManager.BankEvent OnBankUnloaded Field Value BanksManager.BankEvent Methods LoadBank(string, LOAD_BANK_FLAGS) Loads a Bank. By default LOAD_BANK_FLAGS is set to NORMAL. public void LoadBank(string bankName, LOAD_BANK_FLAGS flag = null) Parameters bankName string flag LOAD_BANK_FLAGS LoadBankSampleData(string) Loads all non-streaming Sample Data for a Bank. Make sure to load corresponding Bank before loading the Sample Data. public void LoadBankSampleData(string bankName) Parameters bankName string SwitchLocalization(string, string) Switches localization for audio. public void SwitchLocalization(string currentLocale, string targetLocale) Parameters currentLocale string targetLocale string UnloadAllBanks() Unloads all Banks loaded by user. Will not unload Banks loaded by FMOD Initialization. public void UnloadAllBanks() UnloadBank(string) Unloads a Bank. public void UnloadBank(string bankName) Parameters bankName string"
  },
  "api/Studio23.SS2.AudioSystem.fmod.Core.EventsManager.html": {
    "href": "api/Studio23.SS2.AudioSystem.fmod.Core.EventsManager.html",
    "title": "Class EventsManager | |",
    "keywords": "Class EventsManager Namespace Studio23.SS2.AudioSystem.fmod.Core public class EventsManager Inheritance object EventsManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreateEmitter(FMODEventData, GameObject, CustomStudioEventEmitter, STOP_MODE) Creates a Custom FMOD Studio Event Emitter for an Event on a GameObject. If the GameObject already has an Emitter attached, then pass the Emitter to initialize it. By default it will create an Emitter and the Event Instance's STOP_MODE is set to ALLOWFADEOUT. public FMODEmitterData CreateEmitter(FMODEventData eventData, GameObject referenceGameObject, CustomStudioEventEmitter emitter = null, FMOD.Studio.STOP_MODE stopModeType = null) Parameters eventData FMODEventData referenceGameObject GameObject emitter CustomStudioEventEmitter stopModeType STOP_MODE Returns FMODEmitterData LoadEventSampleData(FMODEventData, GameObject) Loads the sample data of an event. It may be beneficial to load the sample data of an event that is frequently used, instead of loading/unloading every time the event is called. public void LoadEventSampleData(FMODEventData eventData, GameObject referenceGameObject) Parameters eventData FMODEventData referenceGameObject GameObject Pause(FMODEventData, GameObject) Pause the Emitter. public void Pause(FMODEventData eventData, GameObject referenceGameObject) Parameters eventData FMODEventData referenceGameObject GameObject Play(FMODEventData, GameObject, CustomStudioEventEmitter, STOP_MODE) Plays the Emitter. If the GameObject already has an Emitter attached, then pass the Emitter to initialize it. By default it will create an Emitter and the Event Instance's STOP_MODE is set to ALLOWFADEOUT. public void Play(FMODEventData eventData, GameObject referenceGameObject, CustomStudioEventEmitter emitter = null, FMOD.Studio.STOP_MODE stopModeType = null) Parameters eventData FMODEventData referenceGameObject GameObject emitter CustomStudioEventEmitter stopModeType STOP_MODE PlayProgrammerSound(string, FMODEventData, GameObject, CustomStudioEventEmitter, STOP_MODE) Use to play FMOD Programmer Sounds. Localized audio tables for dialogues can be played. Any external audio not within FMOD can be played. If the GameObject already has an Emitter attached, then pass the Emitter to initialize it. By default it will create an Emitter and the Event Instance's STOP_MODE is set to ALLOWFADEOUT. public void PlayProgrammerSound(string key, FMODEventData eventData, GameObject referenceGameObject, CustomStudioEventEmitter emitter = null, FMOD.Studio.STOP_MODE stopModeType = null) Parameters key string eventData FMODEventData referenceGameObject GameObject emitter CustomStudioEventEmitter stopModeType STOP_MODE Release(FMODEventData, GameObject) Release the Event Instance and destroy the Emitter. public UniTask Release(FMODEventData eventData, GameObject referenceGameObject) Parameters eventData FMODEventData referenceGameObject GameObject Returns UniTask SetGlobalParameter(string, float) Sets a Global parameter value by name. public void SetGlobalParameter(string parameterName, float parameterValue) Parameters parameterName string parameterValue float SetLocalParameter(FMODEventData, GameObject, string, float) Sets a Local parameter value by name. public void SetLocalParameter(FMODEventData eventData, GameObject referenceGameObject, string parameterName, float parameterValue) Parameters eventData FMODEventData referenceGameObject GameObject parameterName string parameterValue float Stop(FMODEventData, GameObject) Stop the Emitter with default STOP_MODE. public UniTask Stop(FMODEventData eventData, GameObject referenceGameObject) Parameters eventData FMODEventData referenceGameObject GameObject Returns UniTask Stop(FMODEventData, GameObject, STOP_MODE) Stop the Emitter with a different STOP_MODE. public UniTask Stop(FMODEventData eventData, GameObject referenceGameObject, FMOD.Studio.STOP_MODE stopMode) Parameters eventData FMODEventData referenceGameObject GameObject stopMode STOP_MODE Returns UniTask TogglePauseAll(bool) Pause all Emitters. public void TogglePauseAll(bool isGamePaused) Parameters isGamePaused bool UnPause(FMODEventData, GameObject) UnPause the Emitter public void UnPause(FMODEventData eventData, GameObject referenceGameObject) Parameters eventData FMODEventData referenceGameObject GameObject"
  },
  "api/Studio23.SS2.AudioSystem.fmod.Core.FMODManager.html": {
    "href": "api/Studio23.SS2.AudioSystem.fmod.Core.FMODManager.html",
    "title": "Class FMODManager | |",
    "keywords": "Class FMODManager Namespace Studio23.SS2.AudioSystem.fmod.Core public class FMODManager : MonoBehaviour Inheritance object FMODManager Fields BanksManager public BanksManager BanksManager Field Value BanksManager EventsManager public EventsManager EventsManager Field Value EventsManager InitializeOnStart Set true to Initialize on Start. public bool InitializeOnStart Field Value bool Instance public static FMODManager Instance Field Value FMODManager MixerManager public MixerManager MixerManager Field Value MixerManager Methods Initialize() public void Initialize()"
  },
  "api/Studio23.SS2.AudioSystem.fmod.Core.MixerManager.html": {
    "href": "api/Studio23.SS2.AudioSystem.fmod.Core.MixerManager.html",
    "title": "Class MixerManager | |",
    "keywords": "Class MixerManager Namespace Studio23.SS2.AudioSystem.fmod.Core public class MixerManager Inheritance object MixerManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods MuteBus(string) Mute a Bus. public void MuteBus(string busName) Parameters busName string PauseBus(string) Pauses a Bus. public void PauseBus(string busName) Parameters busName string SetBusVolume(string, float) Sets the volume for a Bus. public void SetBusVolume(string busName, float volume) Parameters busName string volume float SetVCAVolume(string, float) Sets the volume for a VCA. public void SetVCAVolume(string VCAName, float volume) Parameters VCAName string volume float StopAllBusEvents(string) Stops all active Events under a Bus. public UniTask StopAllBusEvents(string busName) Parameters busName string Returns UniTask UnMuteBus(string) UnMute a Bus. public void UnMuteBus(string busName) Parameters busName string UnPauseBus(string) UnPause a Bus. public void UnPauseBus(string busName) Parameters busName string"
  },
  "api/Studio23.SS2.AudioSystem.fmod.Core.html": {
    "href": "api/Studio23.SS2.AudioSystem.fmod.Core.html",
    "title": "Namespace Studio23.SS2.AudioSystem.fmod.Core | |",
    "keywords": "Namespace Studio23.SS2.AudioSystem.fmod.Core Classes BanksManager EventsManager FMODManager MixerManager Delegates BanksManager.BankEvent"
  },
  "api/Studio23.SS2.AudioSystem.fmod.Data.FMODBankList.html": {
    "href": "api/Studio23.SS2.AudioSystem.fmod.Data.FMODBankList.html",
    "title": "Class FMODBankList | |",
    "keywords": "Class FMODBankList Namespace Studio23.SS2.AudioSystem.fmod.Data public static class FMODBankList Inheritance object FMODBankList Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Dialogue public static readonly string Dialogue Field Value string DialogueTable_LOCALE_BN public static readonly string DialogueTable_LOCALE_BN Field Value string DialogueTable_LOCALE_CN public static readonly string DialogueTable_LOCALE_CN Field Value string DialogueTable_LOCALE_EN public static readonly string DialogueTable_LOCALE_EN Field Value string DialogueTable_LOCALE_JP public static readonly string DialogueTable_LOCALE_JP Field Value string Master public static readonly string Master Field Value string Master_strings public static readonly string Master_strings Field Value string SFX public static readonly string SFX Field Value string Sample public static readonly string Sample Field Value string Test public static readonly string Test Field Value string"
  },
  "api/Studio23.SS2.AudioSystem.fmod.Data.FMODBank_Dialogue.html": {
    "href": "api/Studio23.SS2.AudioSystem.fmod.Data.FMODBank_Dialogue.html",
    "title": "Class FMODBank_Dialogue | |",
    "keywords": "Class FMODBank_Dialogue Namespace Studio23.SS2.AudioSystem.fmod.Data public static class FMODBank_Dialogue Inheritance object FMODBank_Dialogue Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Dialogue_Dialogue public static FMODEventData Dialogue_Dialogue Field Value FMODEventData"
  },
  "api/Studio23.SS2.AudioSystem.fmod.Data.FMODBank_Master.html": {
    "href": "api/Studio23.SS2.AudioSystem.fmod.Data.FMODBank_Master.html",
    "title": "Class FMODBank_Master | |",
    "keywords": "Class FMODBank_Master Namespace Studio23.SS2.AudioSystem.fmod.Data public static class FMODBank_Master Inheritance object FMODBank_Master Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields snapshot_Health_Low public static FMODEventData snapshot_Health_Low Field Value FMODEventData snapshot_Pause public static FMODEventData snapshot_Pause Field Value FMODEventData snapshot_Reverb_Cave_Reverb public static FMODEventData snapshot_Reverb_Cave_Reverb Field Value FMODEventData snapshot_Reverb_Sewer_Reverb public static FMODEventData snapshot_Reverb_Sewer_Reverb Field Value FMODEventData snapshot_Slow_Motion public static FMODEventData snapshot_Slow_Motion Field Value FMODEventData snapshot_Test public static FMODEventData snapshot_Test Field Value FMODEventData"
  },
  "api/Studio23.SS2.AudioSystem.fmod.Data.FMODBank_SFX.html": {
    "href": "api/Studio23.SS2.AudioSystem.fmod.Data.FMODBank_SFX.html",
    "title": "Class FMODBank_SFX | |",
    "keywords": "Class FMODBank_SFX Namespace Studio23.SS2.AudioSystem.fmod.Data public static class FMODBank_SFX Inheritance object FMODBank_SFX Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Test public static FMODEventData Test Field Value FMODEventData"
  },
  "api/Studio23.SS2.AudioSystem.fmod.Data.FMODBank_Sample.html": {
    "href": "api/Studio23.SS2.AudioSystem.fmod.Data.FMODBank_Sample.html",
    "title": "Class FMODBank_Sample | |",
    "keywords": "Class FMODBank_Sample Namespace Studio23.SS2.AudioSystem.fmod.Data public static class FMODBank_Sample Inheritance object FMODBank_Sample Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Test public static FMODEventData Test Field Value FMODEventData"
  },
  "api/Studio23.SS2.AudioSystem.fmod.Data.FMODBank_Test.html": {
    "href": "api/Studio23.SS2.AudioSystem.fmod.Data.FMODBank_Test.html",
    "title": "Class FMODBank_Test | |",
    "keywords": "Class FMODBank_Test Namespace Studio23.SS2.AudioSystem.fmod.Data public static class FMODBank_Test Inheritance object FMODBank_Test Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Test public static FMODEventData Test Field Value FMODEventData Test_2 public static FMODEventData Test_2 Field Value FMODEventData Test_3 public static FMODEventData Test_3 Field Value FMODEventData"
  },
  "api/Studio23.SS2.AudioSystem.fmod.Data.FMODBusData.html": {
    "href": "api/Studio23.SS2.AudioSystem.fmod.Data.FMODBusData.html",
    "title": "Class FMODBusData | |",
    "keywords": "Class FMODBusData Namespace Studio23.SS2.AudioSystem.fmod.Data public class FMODBusData Inheritance object FMODBusData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FMODBusData(string, float) public FMODBusData(string busName, float defaultVolume) Parameters busName string defaultVolume float Methods Mute() Mutes a Bus. public void Mute() Pause() Pauses a Bus. public void Pause() SetVolume(float) Sets the volume for a Bus. public void SetVolume(float volume) Parameters volume float StopAllEventsAsync(STOP_MODE) Stops all active Events under a Bus. public UniTask StopAllEventsAsync(FMOD.Studio.STOP_MODE stopModeType = null) Parameters stopModeType STOP_MODE Returns UniTask UnMute() UnMutes a Bus. public void UnMute() UnPause() UnPauses a Bus. public void UnPause()"
  },
  "api/Studio23.SS2.AudioSystem.fmod.Data.FMODBusList.html": {
    "href": "api/Studio23.SS2.AudioSystem.fmod.Data.FMODBusList.html",
    "title": "Class FMODBusList | |",
    "keywords": "Class FMODBusList Namespace Studio23.SS2.AudioSystem.fmod.Data public static class FMODBusList Inheritance object FMODBusList Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Master public static readonly string Master Field Value string Music public static readonly string Music Field Value string SFX public static readonly string SFX Field Value string SFX_Ambience public static readonly string SFX_Ambience Field Value string SFX_Character public static readonly string SFX_Character Field Value string SFX_Explosions public static readonly string SFX_Explosions Field Value string SFX_Objects public static readonly string SFX_Objects Field Value string SFX_Reverb public static readonly string SFX_Reverb Field Value string SFX_Vehicles public static readonly string SFX_Vehicles Field Value string SFX_Weapons public static readonly string SFX_Weapons Field Value string Sample public static readonly string Sample Field Value string UI public static readonly string UI Field Value string VO public static readonly string VO Field Value string"
  },
  "api/Studio23.SS2.AudioSystem.fmod.Data.FMODEmitterData.html": {
    "href": "api/Studio23.SS2.AudioSystem.fmod.Data.FMODEmitterData.html",
    "title": "Class FMODEmitterData | |",
    "keywords": "Class FMODEmitterData Namespace Studio23.SS2.AudioSystem.fmod.Data [Serializable] public class FMODEmitterData Inheritance object FMODEmitterData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FMODEmitterData(FMODEventData, GameObject, CustomStudioEventEmitter, STOP_MODE) public FMODEmitterData(FMODEventData eventData, GameObject referenceGameObject, CustomStudioEventEmitter emitter = null, FMOD.Studio.STOP_MODE stopModeType = null) Parameters eventData FMODEventData referenceGameObject GameObject emitter CustomStudioEventEmitter stopModeType STOP_MODE Methods GetKey() public (string, string, int) GetKey() Returns (string, string, int) Initialize() Creates an Emitter if there is none and creates an Event Instance within the Emitter. public void Initialize() LoadSampleData() public void LoadSampleData() Pause() Suspends the Emitter. Is not affected by TogglePause public void Pause() Play() Plays the Emitter. public void Play() ReleaseAsync() Releases the Event Instance and destroys the Emitter. public UniTask ReleaseAsync() Returns UniTask SetParameter(string, float) Sets a Local parameter value by name. public void SetParameter(string parameterName, float parameterValue) Parameters parameterName string parameterValue float StopAsync() Stops the Emitter with default STOP_MODE. public UniTask StopAsync() Returns UniTask StopAsync(STOP_MODE) Stops the Emitter with different STOP_MODE. public UniTask StopAsync(FMOD.Studio.STOP_MODE stopModeType) Parameters stopModeType STOP_MODE Returns UniTask TogglePause(bool) Pauses the Emitter. public void TogglePause(bool isGamePaused) Parameters isGamePaused bool UnPause() UnSuspends the Emitter. Is not affected by TogglePause public void UnPause() UnloadSampleData() public void UnloadSampleData()"
  },
  "api/Studio23.SS2.AudioSystem.fmod.Data.FMODEventData.html": {
    "href": "api/Studio23.SS2.AudioSystem.fmod.Data.FMODEventData.html",
    "title": "Class FMODEventData | |",
    "keywords": "Class FMODEventData Namespace Studio23.SS2.AudioSystem.fmod.Data public class FMODEventData Inheritance object FMODEventData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FMODEventData(string, string, string) public FMODEventData(string bankName, string eventName, string eventGuid) Parameters bankName string eventName string eventGuid string"
  },
  "api/Studio23.SS2.AudioSystem.fmod.Data.FMODEventState.html": {
    "href": "api/Studio23.SS2.AudioSystem.fmod.Data.FMODEventState.html",
    "title": "Enum FMODEventState | |",
    "keywords": "Enum FMODEventState Namespace Studio23.SS2.AudioSystem.fmod.Data [Flags] public enum FMODEventState Fields Paused = 4 Playing = 1 Stopped = 8 Suspended = 2"
  },
  "api/Studio23.SS2.AudioSystem.fmod.Data.FMODLocaleList.html": {
    "href": "api/Studio23.SS2.AudioSystem.fmod.Data.FMODLocaleList.html",
    "title": "Class FMODLocaleList | |",
    "keywords": "Class FMODLocaleList Namespace Studio23.SS2.AudioSystem.fmod.Data public static class FMODLocaleList Inheritance object FMODLocaleList Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields LanguageList public static Dictionary<Language, string> LanguageList Field Value Dictionary<Language, string>"
  },
  "api/Studio23.SS2.AudioSystem.fmod.Data.FMODParameterList.Test.html": {
    "href": "api/Studio23.SS2.AudioSystem.fmod.Data.FMODParameterList.Test.html",
    "title": "Class FMODParameterList.Test | |",
    "keywords": "Class FMODParameterList.Test Namespace Studio23.SS2.AudioSystem.fmod.Data public static class FMODParameterList.Test Inheritance object FMODParameterList.Test Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields TestParameter public static readonly string TestParameter Field Value string"
  },
  "api/Studio23.SS2.AudioSystem.fmod.Data.FMODParameterList.Test_2.html": {
    "href": "api/Studio23.SS2.AudioSystem.fmod.Data.FMODParameterList.Test_2.html",
    "title": "Class FMODParameterList.Test_2 | |",
    "keywords": "Class FMODParameterList.Test_2 Namespace Studio23.SS2.AudioSystem.fmod.Data public static class FMODParameterList.Test_2 Inheritance object FMODParameterList.Test_2 Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields TestParameter public static readonly string TestParameter Field Value string"
  },
  "api/Studio23.SS2.AudioSystem.fmod.Data.FMODParameterList.Test_3.html": {
    "href": "api/Studio23.SS2.AudioSystem.fmod.Data.FMODParameterList.Test_3.html",
    "title": "Class FMODParameterList.Test_3 | |",
    "keywords": "Class FMODParameterList.Test_3 Namespace Studio23.SS2.AudioSystem.fmod.Data public static class FMODParameterList.Test_3 Inheritance object FMODParameterList.Test_3 Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields TestParameter public static readonly string TestParameter Field Value string"
  },
  "api/Studio23.SS2.AudioSystem.fmod.Data.FMODParameterList.html": {
    "href": "api/Studio23.SS2.AudioSystem.fmod.Data.FMODParameterList.html",
    "title": "Class FMODParameterList | |",
    "keywords": "Class FMODParameterList Namespace Studio23.SS2.AudioSystem.fmod.Data public static class FMODParameterList Inheritance object FMODParameterList Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Studio23.SS2.AudioSystem.fmod.Data.FMODParameterList.snapshot_Test.html": {
    "href": "api/Studio23.SS2.AudioSystem.fmod.Data.FMODParameterList.snapshot_Test.html",
    "title": "Class FMODParameterList.snapshot_Test | |",
    "keywords": "Class FMODParameterList.snapshot_Test Namespace Studio23.SS2.AudioSystem.fmod.Data public static class FMODParameterList.snapshot_Test Inheritance object FMODParameterList.snapshot_Test Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields GlobalTest public static readonly string GlobalTest Field Value string"
  },
  "api/Studio23.SS2.AudioSystem.fmod.Data.FMODVCAData.html": {
    "href": "api/Studio23.SS2.AudioSystem.fmod.Data.FMODVCAData.html",
    "title": "Class FMODVCAData | |",
    "keywords": "Class FMODVCAData Namespace Studio23.SS2.AudioSystem.fmod.Data public class FMODVCAData Inheritance object FMODVCAData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FMODVCAData(string, float) public FMODVCAData(string vcaName, float defaultVolume) Parameters vcaName string defaultVolume float Methods SetVolume(float) Sets the volume for a VCA. public void SetVolume(float volume) Parameters volume float"
  },
  "api/Studio23.SS2.AudioSystem.fmod.Data.FMODVCAList.html": {
    "href": "api/Studio23.SS2.AudioSystem.fmod.Data.FMODVCAList.html",
    "title": "Class FMODVCAList | |",
    "keywords": "Class FMODVCAList Namespace Studio23.SS2.AudioSystem.fmod.Data public static class FMODVCAList Inheritance object FMODVCAList Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Environment public static readonly string Environment Field Value string Equipment public static readonly string Equipment Field Value string Player public static readonly string Player Field Value string Sample public static readonly string Sample Field Value string"
  },
  "api/Studio23.SS2.AudioSystem.fmod.Data.Language.html": {
    "href": "api/Studio23.SS2.AudioSystem.fmod.Data.Language.html",
    "title": "Enum Language | |",
    "keywords": "Enum Language Namespace Studio23.SS2.AudioSystem.fmod.Data public enum Language Fields BN = 0 CN = 1 EN = 2 JP = 3"
  },
  "api/Studio23.SS2.AudioSystem.fmod.Data.html": {
    "href": "api/Studio23.SS2.AudioSystem.fmod.Data.html",
    "title": "Namespace Studio23.SS2.AudioSystem.fmod.Data | |",
    "keywords": "Namespace Studio23.SS2.AudioSystem.fmod.Data Classes FMODBankList FMODBank_Dialogue FMODBank_Master FMODBank_SFX FMODBank_Sample FMODBank_Test FMODBusData FMODBusList FMODEmitterData FMODEventData FMODLocaleList FMODParameterList FMODParameterList.Test FMODParameterList.Test_2 FMODParameterList.Test_3 FMODParameterList.snapshot_Test FMODVCAData FMODVCAList Enums FMODEventState Language"
  },
  "api/Studio23.SS2.AudioSystem.fmod.Editor.CreateFMODDataEditor.html": {
    "href": "api/Studio23.SS2.AudioSystem.fmod.Editor.CreateFMODDataEditor.html",
    "title": "Class CreateFMODDataEditor | |",
    "keywords": "Class CreateFMODDataEditor Namespace Studio23.SS2.AudioSystem.fmod.Editor public class CreateFMODDataEditor : EditorWindow Inheritance object CreateFMODDataEditor Methods GenerateData() public static void GenerateData()"
  },
  "api/Studio23.SS2.AudioSystem.fmod.Editor.CustomStudioEventEmitterEditor.html": {
    "href": "api/Studio23.SS2.AudioSystem.fmod.Editor.CustomStudioEventEmitterEditor.html",
    "title": "Class CustomStudioEventEmitterEditor | |",
    "keywords": "Class CustomStudioEventEmitterEditor Namespace Studio23.SS2.AudioSystem.fmod.Editor public class CustomStudioEventEmitterEditor : UnityEditor.Editor Inheritance object CustomStudioEventEmitterEditor Methods OnEnable() public void OnEnable() OnInspectorGUI() public override void OnInspectorGUI() OnSceneGUI() public void OnSceneGUI()"
  },
  "api/Studio23.SS2.AudioSystem.fmod.Editor.html": {
    "href": "api/Studio23.SS2.AudioSystem.fmod.Editor.html",
    "title": "Namespace Studio23.SS2.AudioSystem.fmod.Editor | |",
    "keywords": "Namespace Studio23.SS2.AudioSystem.fmod.Editor Classes CreateFMODDataEditor CustomStudioEventEmitterEditor"
  },
  "api/Studio23.SS2.AudioSystem.fmod.Extensions.CustomStudioEventEmitter.html": {
    "href": "api/Studio23.SS2.AudioSystem.fmod.Extensions.CustomStudioEventEmitter.html",
    "title": "Class CustomStudioEventEmitter | |",
    "keywords": "Class CustomStudioEventEmitter Namespace Studio23.SS2.AudioSystem.fmod.Extensions public class CustomStudioEventEmitter : FMODUnity.EventHandler Inheritance object CustomStudioEventEmitter Fields AllowFadeout public bool AllowFadeout Field Value bool AllowNonRigidbodyDoppler public bool AllowNonRigidbodyDoppler Field Value bool Event [Obsolete(\"Use the EventReference field instead\")] public string Event Field Value string EventReference public EventReference EventReference Field Value EventReference OverrideAttenuation public bool OverrideAttenuation Field Value bool OverrideMaxDistance public float OverrideMaxDistance Field Value float OverrideMinDistance public float OverrideMinDistance Field Value float Params public ParamRef[] Params Field Value ParamRef[] PlayEvent public EmitterGameEvent PlayEvent Field Value EmitterGameEvent Preload public bool Preload Field Value bool StopEvent public EmitterGameEvent StopEvent Field Value EmitterGameEvent TriggerOnce public bool TriggerOnce Field Value bool eventDescription protected EventDescription eventDescription Field Value EventDescription instance protected EventInstance instance Field Value EventInstance Properties EventDescription public EventDescription EventDescription { get; } Property Value EventDescription EventInstance public EventInstance EventInstance { get; } Property Value EventInstance IsActive public bool IsActive { get; } Property Value bool Methods CustomInitialize() Creates the Event Instance separately from Play(). public void CustomInitialize() CustomPlay() Plays the created Event Instance. public void CustomPlay() HandleGameEvent(EmitterGameEvent) protected override void HandleGameEvent(EmitterGameEvent gameEvent) Parameters gameEvent EmitterGameEvent IsPlaying() public bool IsPlaying() Returns bool OnDestroy() protected override void OnDestroy() Play() public void Play() SetParameter(PARAMETER_ID, float, bool) public void SetParameter(PARAMETER_ID id, float value, bool ignoreseekspeed = false) Parameters id PARAMETER_ID value float ignoreseekspeed bool SetParameter(string, float, bool) public void SetParameter(string name, float value, bool ignoreseekspeed = false) Parameters name string value float ignoreseekspeed bool Start() protected override void Start() Stop() public void Stop() UpdateActiveEmitters() public static void UpdateActiveEmitters()"
  },
  "api/Studio23.SS2.AudioSystem.fmod.Extensions.FMODCallBackHandler.html": {
    "href": "api/Studio23.SS2.AudioSystem.fmod.Extensions.FMODCallBackHandler.html",
    "title": "Class FMODCallBackHandler | |",
    "keywords": "Class FMODCallBackHandler Namespace Studio23.SS2.AudioSystem.fmod.Extensions public static class FMODCallBackHandler Inheritance object FMODCallBackHandler Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods InitializeCallBack(FMODEmitterData) Initializes a default CallBack for all Event Instances. public static void InitializeCallBack(FMODEmitterData eventData) Parameters eventData FMODEmitterData IsLoopingCheck(USER_PROPERTY, FMODEmitterData) Checks if the Event Instance is looping. If the Event is looping, define a variable called \"IsLooping\" under the User Properties of an Event from FMOD Studio and set its value to 1. public static void IsLoopingCheck(USER_PROPERTY userProperties, FMODEmitterData eventData) Parameters userProperties USER_PROPERTY eventData FMODEmitterData"
  },
  "api/Studio23.SS2.AudioSystem.fmod.Extensions.FMODProgrammerSoundCallBackHandler.ProgrammerSoundEvent.html": {
    "href": "api/Studio23.SS2.AudioSystem.fmod.Extensions.FMODProgrammerSoundCallBackHandler.ProgrammerSoundEvent.html",
    "title": "Delegate FMODProgrammerSoundCallBackHandler.ProgrammerSoundEvent | |",
    "keywords": "Delegate FMODProgrammerSoundCallBackHandler.ProgrammerSoundEvent Namespace Studio23.SS2.AudioSystem.fmod.Extensions public delegate void FMODProgrammerSoundCallBackHandler.ProgrammerSoundEvent()"
  },
  "api/Studio23.SS2.AudioSystem.fmod.Extensions.FMODProgrammerSoundCallBackHandler.html": {
    "href": "api/Studio23.SS2.AudioSystem.fmod.Extensions.FMODProgrammerSoundCallBackHandler.html",
    "title": "Class FMODProgrammerSoundCallBackHandler | |",
    "keywords": "Class FMODProgrammerSoundCallBackHandler Namespace Studio23.SS2.AudioSystem.fmod.Extensions public static class FMODProgrammerSoundCallBackHandler Inheritance object FMODProgrammerSoundCallBackHandler Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields OnDialogueComplete public static FMODProgrammerSoundCallBackHandler.ProgrammerSoundEvent OnDialogueComplete Field Value FMODProgrammerSoundCallBackHandler.ProgrammerSoundEvent OnDialogueStarted public static FMODProgrammerSoundCallBackHandler.ProgrammerSoundEvent OnDialogueStarted Field Value FMODProgrammerSoundCallBackHandler.ProgrammerSoundEvent Methods InitializeProgrammerCallback(FMODEmitterData, string, bool) Initializes a CallBack for all Event Instances with programmer sounds. public static UniTask InitializeProgrammerCallback(FMODEmitterData eventData, string key, bool assignCallBack = false) Parameters eventData FMODEmitterData key string assignCallBack bool Returns UniTask"
  },
  "api/Studio23.SS2.AudioSystem.fmod.Extensions.html": {
    "href": "api/Studio23.SS2.AudioSystem.fmod.Extensions.html",
    "title": "Namespace Studio23.SS2.AudioSystem.fmod.Extensions | |",
    "keywords": "Namespace Studio23.SS2.AudioSystem.fmod.Extensions Classes CustomStudioEventEmitter FMODCallBackHandler FMODProgrammerSoundCallBackHandler Delegates FMODProgrammerSoundCallBackHandler.ProgrammerSoundEvent"
  },
  "api/Studio23.SS2.AudioSystem.fmod.Tests.Language.html": {
    "href": "api/Studio23.SS2.AudioSystem.fmod.Tests.Language.html",
    "title": "Enum Language | |",
    "keywords": "Enum Language Namespace Studio23.SS2.AudioSystem.fmod.Tests public enum Language Fields BN = 0 CN = 1 EN = 2 JP = 3"
  },
  "api/Studio23.SS2.AudioSystem.fmod.Tests.Playmode.PlayModeTests.html": {
    "href": "api/Studio23.SS2.AudioSystem.fmod.Tests.Playmode.PlayModeTests.html",
    "title": "Class PlayModeTests | |",
    "keywords": "Class PlayModeTests Namespace Studio23.SS2.AudioSystem.fmod.Tests.Playmode public class PlayModeTests Inheritance object PlayModeTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreateEmitter() public IEnumerator CreateEmitter() Returns IEnumerator DestroyAudioManager() public IEnumerator DestroyAudioManager() Returns IEnumerator GetBus() public IEnumerator GetBus() Returns IEnumerator GetVCA() public IEnumerator GetVCA() Returns IEnumerator LoadAudioManager() public IEnumerator LoadAudioManager() Returns IEnumerator LoadMultipleBanks() public IEnumerator LoadMultipleBanks() Returns IEnumerator LoadSingleBank() public IEnumerator LoadSingleBank() Returns IEnumerator MuteBus() public IEnumerator MuteBus() Returns IEnumerator PauseBus() public IEnumerator PauseBus() Returns IEnumerator PauseSound() public IEnumerator PauseSound() Returns IEnumerator PlaySound() public IEnumerator PlaySound() Returns IEnumerator ReleaseSound() public IEnumerator ReleaseSound() Returns IEnumerator SetBusVolume() public IEnumerator SetBusVolume() Returns IEnumerator SetGlobalParameter() public IEnumerator SetGlobalParameter() Returns IEnumerator SetLocalParameter() public IEnumerator SetLocalParameter() Returns IEnumerator SetVCAVolume() public IEnumerator SetVCAVolume() Returns IEnumerator StopAllBusEvents() public IEnumerator StopAllBusEvents() Returns IEnumerator StopSound() public IEnumerator StopSound() Returns IEnumerator SwitchLocalization() public IEnumerator SwitchLocalization() Returns IEnumerator TogglePause() public IEnumerator TogglePause() Returns IEnumerator ToggleUnPause() public IEnumerator ToggleUnPause() Returns IEnumerator UnMuteBus() public IEnumerator UnMuteBus() Returns IEnumerator UnPauseBus() public IEnumerator UnPauseBus() Returns IEnumerator UnPauseSound() public IEnumerator UnPauseSound() Returns IEnumerator UnloadAllBanks() public IEnumerator UnloadAllBanks() Returns IEnumerator UnloadSingleBank() public IEnumerator UnloadSingleBank() Returns IEnumerator"
  },
  "api/Studio23.SS2.AudioSystem.fmod.Tests.Playmode.html": {
    "href": "api/Studio23.SS2.AudioSystem.fmod.Tests.Playmode.html",
    "title": "Namespace Studio23.SS2.AudioSystem.fmod.Tests.Playmode | |",
    "keywords": "Namespace Studio23.SS2.AudioSystem.fmod.Tests.Playmode Classes PlayModeTests"
  },
  "api/Studio23.SS2.AudioSystem.fmod.Tests.Test_FMODBankList.html": {
    "href": "api/Studio23.SS2.AudioSystem.fmod.Tests.Test_FMODBankList.html",
    "title": "Class Test_FMODBankList | |",
    "keywords": "Class Test_FMODBankList Namespace Studio23.SS2.AudioSystem.fmod.Tests public static class Test_FMODBankList Inheritance object Test_FMODBankList Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Dialogue public static readonly string Dialogue Field Value string DialogueTable_LOCALE_BN public static readonly string DialogueTable_LOCALE_BN Field Value string DialogueTable_LOCALE_CN public static readonly string DialogueTable_LOCALE_CN Field Value string DialogueTable_LOCALE_EN public static readonly string DialogueTable_LOCALE_EN Field Value string DialogueTable_LOCALE_JP public static readonly string DialogueTable_LOCALE_JP Field Value string Master public static readonly string Master Field Value string Master_strings public static readonly string Master_strings Field Value string SFX public static readonly string SFX Field Value string Sample public static readonly string Sample Field Value string Test public static readonly string Test Field Value string"
  },
  "api/Studio23.SS2.AudioSystem.fmod.Tests.Test_FMODBank_Dialogue.html": {
    "href": "api/Studio23.SS2.AudioSystem.fmod.Tests.Test_FMODBank_Dialogue.html",
    "title": "Class Test_FMODBank_Dialogue | |",
    "keywords": "Class Test_FMODBank_Dialogue Namespace Studio23.SS2.AudioSystem.fmod.Tests public static class Test_FMODBank_Dialogue Inheritance object Test_FMODBank_Dialogue Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Dialogue_Dialogue public static FMODEventData Dialogue_Dialogue Field Value FMODEventData"
  },
  "api/Studio23.SS2.AudioSystem.fmod.Tests.Test_FMODBank_Master.html": {
    "href": "api/Studio23.SS2.AudioSystem.fmod.Tests.Test_FMODBank_Master.html",
    "title": "Class Test_FMODBank_Master | |",
    "keywords": "Class Test_FMODBank_Master Namespace Studio23.SS2.AudioSystem.fmod.Tests public static class Test_FMODBank_Master Inheritance object Test_FMODBank_Master Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields snapshot_Health_Low public static FMODEventData snapshot_Health_Low Field Value FMODEventData snapshot_Pause public static FMODEventData snapshot_Pause Field Value FMODEventData snapshot_Reverb_Cave_Reverb public static FMODEventData snapshot_Reverb_Cave_Reverb Field Value FMODEventData snapshot_Reverb_Sewer_Reverb public static FMODEventData snapshot_Reverb_Sewer_Reverb Field Value FMODEventData snapshot_Slow_Motion public static FMODEventData snapshot_Slow_Motion Field Value FMODEventData snapshot_Test public static FMODEventData snapshot_Test Field Value FMODEventData"
  },
  "api/Studio23.SS2.AudioSystem.fmod.Tests.Test_FMODBank_SFX.html": {
    "href": "api/Studio23.SS2.AudioSystem.fmod.Tests.Test_FMODBank_SFX.html",
    "title": "Class Test_FMODBank_SFX | |",
    "keywords": "Class Test_FMODBank_SFX Namespace Studio23.SS2.AudioSystem.fmod.Tests public static class Test_FMODBank_SFX Inheritance object Test_FMODBank_SFX Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Test public static FMODEventData Test Field Value FMODEventData"
  },
  "api/Studio23.SS2.AudioSystem.fmod.Tests.Test_FMODBank_Sample.html": {
    "href": "api/Studio23.SS2.AudioSystem.fmod.Tests.Test_FMODBank_Sample.html",
    "title": "Class Test_FMODBank_Sample | |",
    "keywords": "Class Test_FMODBank_Sample Namespace Studio23.SS2.AudioSystem.fmod.Tests public static class Test_FMODBank_Sample Inheritance object Test_FMODBank_Sample Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Test public static FMODEventData Test Field Value FMODEventData"
  },
  "api/Studio23.SS2.AudioSystem.fmod.Tests.Test_FMODBank_Test.html": {
    "href": "api/Studio23.SS2.AudioSystem.fmod.Tests.Test_FMODBank_Test.html",
    "title": "Class Test_FMODBank_Test | |",
    "keywords": "Class Test_FMODBank_Test Namespace Studio23.SS2.AudioSystem.fmod.Tests public static class Test_FMODBank_Test Inheritance object Test_FMODBank_Test Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Test public static FMODEventData Test Field Value FMODEventData Test_2 public static FMODEventData Test_2 Field Value FMODEventData Test_3 public static FMODEventData Test_3 Field Value FMODEventData"
  },
  "api/Studio23.SS2.AudioSystem.fmod.Tests.Test_FMODBusList.html": {
    "href": "api/Studio23.SS2.AudioSystem.fmod.Tests.Test_FMODBusList.html",
    "title": "Class Test_FMODBusList | |",
    "keywords": "Class Test_FMODBusList Namespace Studio23.SS2.AudioSystem.fmod.Tests public static class Test_FMODBusList Inheritance object Test_FMODBusList Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Master public static readonly string Master Field Value string Music public static readonly string Music Field Value string SFX public static readonly string SFX Field Value string SFX_Ambience public static readonly string SFX_Ambience Field Value string SFX_Character public static readonly string SFX_Character Field Value string SFX_Explosions public static readonly string SFX_Explosions Field Value string SFX_Objects public static readonly string SFX_Objects Field Value string SFX_Reverb public static readonly string SFX_Reverb Field Value string SFX_Vehicles public static readonly string SFX_Vehicles Field Value string SFX_Weapons public static readonly string SFX_Weapons Field Value string Sample public static readonly string Sample Field Value string UI public static readonly string UI Field Value string VO public static readonly string VO Field Value string"
  },
  "api/Studio23.SS2.AudioSystem.fmod.Tests.Test_FMODLocaleList.html": {
    "href": "api/Studio23.SS2.AudioSystem.fmod.Tests.Test_FMODLocaleList.html",
    "title": "Class Test_FMODLocaleList | |",
    "keywords": "Class Test_FMODLocaleList Namespace Studio23.SS2.AudioSystem.fmod.Tests public static class Test_FMODLocaleList Inheritance object Test_FMODLocaleList Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields LanguageList public static Dictionary<Language, string> LanguageList Field Value Dictionary<Language, string>"
  },
  "api/Studio23.SS2.AudioSystem.fmod.Tests.Test_FMODParameterList.Test.html": {
    "href": "api/Studio23.SS2.AudioSystem.fmod.Tests.Test_FMODParameterList.Test.html",
    "title": "Class Test_FMODParameterList.Test | |",
    "keywords": "Class Test_FMODParameterList.Test Namespace Studio23.SS2.AudioSystem.fmod.Tests public static class Test_FMODParameterList.Test Inheritance object Test_FMODParameterList.Test Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields TestParameter public static readonly string TestParameter Field Value string"
  },
  "api/Studio23.SS2.AudioSystem.fmod.Tests.Test_FMODParameterList.Test_2.html": {
    "href": "api/Studio23.SS2.AudioSystem.fmod.Tests.Test_FMODParameterList.Test_2.html",
    "title": "Class Test_FMODParameterList.Test_2 | |",
    "keywords": "Class Test_FMODParameterList.Test_2 Namespace Studio23.SS2.AudioSystem.fmod.Tests public static class Test_FMODParameterList.Test_2 Inheritance object Test_FMODParameterList.Test_2 Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields TestParameter public static readonly string TestParameter Field Value string"
  },
  "api/Studio23.SS2.AudioSystem.fmod.Tests.Test_FMODParameterList.Test_3.html": {
    "href": "api/Studio23.SS2.AudioSystem.fmod.Tests.Test_FMODParameterList.Test_3.html",
    "title": "Class Test_FMODParameterList.Test_3 | |",
    "keywords": "Class Test_FMODParameterList.Test_3 Namespace Studio23.SS2.AudioSystem.fmod.Tests public static class Test_FMODParameterList.Test_3 Inheritance object Test_FMODParameterList.Test_3 Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields TestParameter public static readonly string TestParameter Field Value string"
  },
  "api/Studio23.SS2.AudioSystem.fmod.Tests.Test_FMODParameterList.html": {
    "href": "api/Studio23.SS2.AudioSystem.fmod.Tests.Test_FMODParameterList.html",
    "title": "Class Test_FMODParameterList | |",
    "keywords": "Class Test_FMODParameterList Namespace Studio23.SS2.AudioSystem.fmod.Tests public static class Test_FMODParameterList Inheritance object Test_FMODParameterList Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Studio23.SS2.AudioSystem.fmod.Tests.Test_FMODParameterList.snapshot_Test.html": {
    "href": "api/Studio23.SS2.AudioSystem.fmod.Tests.Test_FMODParameterList.snapshot_Test.html",
    "title": "Class Test_FMODParameterList.snapshot_Test | |",
    "keywords": "Class Test_FMODParameterList.snapshot_Test Namespace Studio23.SS2.AudioSystem.fmod.Tests public static class Test_FMODParameterList.snapshot_Test Inheritance object Test_FMODParameterList.snapshot_Test Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields GlobalTest public static readonly string GlobalTest Field Value string"
  },
  "api/Studio23.SS2.AudioSystem.fmod.Tests.Test_FMODVCAList.html": {
    "href": "api/Studio23.SS2.AudioSystem.fmod.Tests.Test_FMODVCAList.html",
    "title": "Class Test_FMODVCAList | |",
    "keywords": "Class Test_FMODVCAList Namespace Studio23.SS2.AudioSystem.fmod.Tests public static class Test_FMODVCAList Inheritance object Test_FMODVCAList Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Environment public static readonly string Environment Field Value string Equipment public static readonly string Equipment Field Value string Player public static readonly string Player Field Value string Sample public static readonly string Sample Field Value string"
  },
  "api/Studio23.SS2.AudioSystem.fmod.Tests.html": {
    "href": "api/Studio23.SS2.AudioSystem.fmod.Tests.html",
    "title": "Namespace Studio23.SS2.AudioSystem.fmod.Tests | |",
    "keywords": "Namespace Studio23.SS2.AudioSystem.fmod.Tests Classes Test_FMODBankList Test_FMODBank_Dialogue Test_FMODBank_Master Test_FMODBank_SFX Test_FMODBank_Sample Test_FMODBank_Test Test_FMODBusList Test_FMODLocaleList Test_FMODParameterList Test_FMODParameterList.Test Test_FMODParameterList.Test_2 Test_FMODParameterList.Test_3 Test_FMODParameterList.snapshot_Test Test_FMODVCAList Enums Language"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "| |",
    "keywords": "This is the documentation for the Scripting APIs of this package."
  },
  "changelog/CHANGELOG.html": {
    "href": "changelog/CHANGELOG.html",
    "title": "Changelog | |",
    "keywords": "Changelog [v0.0.7] - 2024-03-11 Removed FMOD from the package. FMOD no longer ships with this package. [v0.0.2] - 2023-12-28 Updated Fixed samples. [v0.0.1] - 2023-12-21 Added New Editor script to generate data from FMOD containing all banks, buses, VCAs, locales, events and parameters. New FMODManager class added which will be the entrypoint into using this library. New test cases to ensure library is working as intended."
  },
  "index.html": {
    "href": "index.html",
    "title": "| |",
    "keywords": "This page redirects to the manual."
  },
  "license/LICENSE.html": {
    "href": "license/LICENSE.html",
    "title": "| |",
    "keywords": "MIT License Copyright (c) [2023] [Studio 23] Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  "manual/index.html": {
    "href": "manual/index.html",
    "title": "Audio System FMOD | |",
    "keywords": "Audio System FMOD Audio System FMOD is a tool designed for managing and utilizing the FMOD engine in a simpler and unified manner within Unity. It makes it easier to manage all game audio using FMOD and allows the user to focus more on audio and sound design. Table of Contents Installation Setup Important FMOD Settings in Unity Bank Import Initialization Renaming FMOD Project Locales Generating all FMOD data Usage FMOD Manager Events Manager Banks Manager Mixer Manager CallBack Handlers Using the sample provided Installation Install via Git URL You can also use the \"Install from Git URL\" option from Unity Package Manager to install the package. https://github.com/Studio-23-xyz/com.studio23.ss2.audiosystem.fmod.git#upm Setup Important This package cannot function on its own and is intended to be used with FMOD. Make sure you have the FMOD for Unity plugin installed in your project before installing Audio System FMOD. You can find the plugin on the Unity Asset Store or on the FMOD website. This package assumes familiarity with FMOD for its usage so please read up on FMOD's documentation. FMOD Settings in Unity Bank Import Follow FMOD's documentation on where to set up your FMOD Project. After the FMOD project is set up, build your FMOD project for all platforms. In Unity, go to FMOD -> Edit Settings. Under Bank Import, set Source Type to Single Platform Build and specify your desired platform's build directory. This package does not support Source Type of FMOD Studio Project or Multiple Platform Build. To build the Unity project for other platforms, select the desired platform's build directory from the FMOD settings before building for that platform. Initialization In Unity, go to FMOD -> Edit Settings. Under Initialization, Load Banks can be set to All, None or Specified. If set to All, then you don't have to worry about bank loading/unloading other than the banks for dialogue audio tables. This may not be the best option for larger games. Ideally, it is better to set Load Banks to Specified so that you can specify important banks to be loaded on game start. For example, you can specify the master bank(s), .strings bank(s) and banks that are always required (such as a UI bank, base dialogue bank). Specified banks cannot be unloaded. Don't specifiy a bank you may need to unload such as a localization bank. If set to None, make sure to manually load the Master bank and Master.strings bank before trying to playback any audio. If you have more than one Master bank, then load those and their corresponding .strings banks too. Renaming FMOD Project Locales When setting up localized audio tables in FMOD Studio, the project locales must be renamed or else the data generation will be incorrect as it will not be able to find the correct banks. In FMOD Studio, go to Edit -> Preferences -> Assets. Add the keyword \"LOCALE_\" before the language code. For example, EN should become LOCALE_EN. Rename all the locales before performing the next step. Generating all FMOD data To use FMOD and its features, we need references to events, parameters, banks, buses and VCAs. Make sure to build the FMOD project and select the correct platform build directory before generating the FMOD Data. Go to Studio-23 -> Generate All FMOD Data. This will generate data containing the references from FMOD Studio. You will need to generate the data again if you rebuild your FMOD project, if you want to build the Unity project for a different platform. Frequent regeneration will be needed as your project grows. In the data generated you will find: FMODBank_[BankName] containing references to all the events under the [BankName] Bank. FMODBankList containing references to all the banks. FMODBusList containing references to all the buses. FMODVCAList containing references to all the VCAs. FMODParameterList containing references to all the parameter names. FMODLocaleList containing references to all languages supported by the current FMOD build and their corresponding bank. Usage FMOD Manager Attach the FMODManager script to a GameObject in your scene. You can access the EventsManager, BanksManager and MixerManager through the FMODManager. Events Manager The EventsManager can be used to play, pause, unpause, stop events. All events, game wide can be paused and unpaused. Programmer sounds can be played. Local and global parameters can be changed. Every sound is played through a Custom Studio Event Emitter. The only difference between our custom emitter and FMOD's emitter is in how the event instance is initialized. Sounds are not played through separate event intances. Sounds are not played through PlayOneShot(). This is to ensure the event instance isn't released automatically and it allows us to hold its reference so we can reuse it or pause/unpause it. Make sure the correct banks are loaded before playing a sound or creating an emitter, or else the sound won't play and will give an error. Use Play() to play an event. It will take the event we want to play and the gameobject from which it will play. By default, it will create an emitter on the GameObject and will set the event instance's STOP_MODE to ALLOWFADEOUT. If the GameObject already has an emitter component, we can pass that emitter instead to initialize it. If an emitter of type \"event and GameObject\" already exists, it will just play the event. Pause(), UnPause(), Stop(), Release(), LoadEventSampleData(), work similarly, but they need an emitter of type \"event and GameObject\" to exist or else they will do nothing. Sometimes an emitter may need to be created or initialized at runtime without playing it. Call CreateEmitter() to create an emitter on the GameObject. It will take the event we want to play and the gameobject from which it will play. By default, it will create an emitter on the GameObject and will set the event instance's STOP_MODE to ALLOWFADEOUT. If the GameObject already has an emitter component, we can pass that emitter instead to initialize it. Once an emitter of type \"event and GameObject\" is created, we no longer have to create this emitter again to use playback methods. We can call playback methods on this emitter by passing in the event and the GameObject. PlayProgrammerSound() creates an emitter similar to Play() and plays the sound immediately. It will take the key of the audio file we want to play, the event we want to play and the gameobject from which it will play. The key can be a key from a audio table from FMOD. The key can also be the file name of an audio file in the streaming assets folder. LoadEventSampleData() Loads the sample data of an event. It may be beneficial to load the sample data of an event that is frequently used, instead of loading/unloading every time the event is called. Make sure to call Release() for events that are no longer needed. It will release the event instance and destroy the emitter. TogglePauseAll() will pause/unpause all the events in the game. SetLocalParameter() can be used to change parameters withing event instances. It will take the event, the gameobject from which it is playing, the parameter name and the parameter value. SetGlobalParameter()can be used to change global parameters. Banks Manager The BanksManager can be used to load/unload banks, load/unload sample data and switch localization. Make sure to load the correct banks before trying to play a sound. LoadBank() is used to load a bank. By default, LOAD_BANK_FLAGS is set to NORMAL. UnloadBank() is used to unload bank. It cannot remove banks that have been specified FMOD in the FMOD Settings. UnloadAllBanks() is used to unload all banks. It does not remove banks that have been specified FMOD in the FMOD Settings. LoadBankSampleData() is used to load all the non-streaming sample data of a bank. Can also be used if banks are built with separate metadata and assets. SwitchLocalization() is used to switch localization. It will unload the current localization bank and load the target localization bank. Mixer Manager The MixerManager can be used to control the Buses and VCAs within FMOD. SetBusVolume(), PauseBus(), UnPauseBus(), MuteBus(), UnMuteBus() all perform their respective functionality on the specified bus. StopAllBusEvents() stops all events under a specific bus. SetVCAVolume() is used to change the volume of a VCA. CallBack Handlers This system uses two callback handlers. The default callback handler FMODCallBackHandler manages the internal playback states of each event. It can also handle looping audio. This callback is set whenever an emitter is created and is fired with every event that is played. The programmer callback handler FMODProgrammerSoundCallBackHandler manages the playback of externally loaded sounds and is required for dialogues and localized audio tables. This callback is set whenever an PlayProgrammerSound() is called and is fired with every subsequent call. It is possible to create and set your own callback handler. You can fetch or create an emitter using CreateEmitter() and pass this to the initialize method of your callback handler. Look at the initialize methods of our callback handle to get an idea on how to make your initialize method. Using the sample provided Open the FMOD Project file in the samples folder. Go to Files -> Build All Platforms. In Unity, go to FMOD -> Edit Settings. Under Bank Import, set Source Type to Single Platform Build and specify the Desktop build directory. Under Initialization, set Load Banks Specified. Under Specified Banks add Master, Master.strings, Sample, and Dialogue Play the SampleScene."
  }
}